{"version":3,"sources":["components/Text/index.tsx","components/Button/index.tsx","components/Page/index.tsx","utils/UserProvider.tsx","components/Link/index.tsx","pages/App/Navigation.tsx","components/Box/index.tsx","components/Flexbox/index.tsx","components/Page/Header.tsx","api/models/user.ts","utils/parseApiResponse.ts","utils/getCollection.ts","api/getAuthorization.ts","components/Tile/index.tsx","pages/Login/Login.tsx","pages/Login/form.ts","pages/Main.tsx","pages/Register.tsx","components/PageColumns/index.tsx","api/users/getUser.ts","components/QueryLoader/index.tsx","components/Separator/index.tsx","components/TileHeader/index.tsx","pages/UserAccount/Settings/CompanyInfo/index.loader.tsx","pages/UserAccount/Settings/CompanyInfo/CompanyInfo.tsx","api/utils/sliceIdFromPayload.ts","api/users/editUser.ts","components/Input/index.tsx","components/Label/index.tsx","components/SectionTitle/index.tsx","components/TextButton.tsx","components/ResultScreen.tsx","components/InputError/index.tsx","pages/UserAccount/Settings/EditForm/index.loader.tsx","pages/UserAccount/Settings/EditForm/EditForm.tsx","pages/UserAccount/Settings/form.ts","pages/UserAccount/Settings/index.tsx","api/models/orderProduct.ts","api/models/order.ts","api/orders/getOrder.ts","components/Row/index.tsx","api/models/product.ts","api/products/getProducts.ts","components/Image/index.tsx","pages/NewOrder/OrderForm/QuantitySelect.tsx","pages/NewOrder/OrderForm/ProductRow.tsx","components/Textarea/index.tsx","utils/getNow.ts","api/createOrder.ts","api/editOrder.ts","components/Overlay/index.tsx","utils/OverlayProvider.tsx","components/Select/index.tsx","pages/NewOrder/OrderForm/index.tsx","pages/NewOrder/OrderForm/form.ts","api/orders/getOrderProducts.ts","pages/UserAccount/Order.tsx","api/models/userOrder.ts","api/users/getUserOrders.ts","components/Chip/index.tsx","pages/UserAccount/index.loader.tsx","pages/UserAccount/Orders.tsx","components/Tabs/index.tsx","components/Tabs/TabList.tsx","pages/NewOrder/UserProfile.tsx","pages/UserAccount/index.tsx","pages/NoMatch.tsx","pages/NewOrder/index.tsx","firebase/config.ts","components/Route/index.tsx","pages/Logout.tsx","components/Thumbnail/index.tsx","pages/Products/ProductTile.tsx","styles/theme.ts","styles/breakpoints.ts","pages/Products/ProductsGrid.tsx","pages/Products/index.tsx","pages/App/index.tsx","styles/GlobalStyle.tsx","index.tsx"],"names":["Text","forwardRef","ref","as","className","children","props","Container","styled","span","compose","typography","color","shadow","space","layout","BUTTON_HEIGHT","button","theme","radii","small","disabled","colors","gray7","variantToBackground","variant","white","variantToColor","primary","secondary","Button","onClick","type","maxWidthStyles","css","div","Page","userContext","createContext","profile","undefined","setProfile","UserProvider","useState","Provider","value","LinkStyleButton","blue","Link","LinkRouter","to","Wrapper","header","Navigation","useContext","path","useRouteMatch","history","useHistory","push","Box","border","position","background","grid","Flexbox","attrs","display","flexbox","Title","h1","Header","flexDirection","justifyContent","alignItems","width","authorization","object","login","string","password","user","_id","contact","email","phone_number","address","name","street","post_code","city","country","billing_address","emailRegex","phoneNumberRegex","postCodeRegex","parseApiResponse","schema","response","exists","data","id","obj","parsedResponse","safeParse","success","Error","error","message","getCollection","snapshot","records","forEach","elem","parsedElem","getAuthorization","params","a","db","getFirestore","collection","q","query","where","getDocs","users","length","Tile","medium","padding","InputStyled","input","Login","useMutation","onSuccess","mutate","onSubmit","values","isSuccess","useForm","initialValues","handleSubmit","placeholder","onChange","Main","Register","PageColumns","getUser","userId","queryKey","usersRef","doc","getDoc","usersSnap","QueryLoader","Loader","isFetching","style","Separator","hr","gray3","TileHeader","fontSize","fontWeight","margin","title","AddressRow","num","height","viewBox","CompanyInfoLoader","CompanyInfo","userQuery","useQuery","sliceIdFromPayload","payload","_i","editUser","userRef","updateDoc","InputBox","gray4","maxWidth","Input","label","Label","marginBottom","SectionTitle","TextButton","red","green","ResultScreen","InputError","meta","submitError","InputWithLabel","EditFormLoader","transform","EditForm","view","setView","editingForm","setEditingForm","form","validate","match","marginTop","event","preventDefault","reset","marginRight","Settings","orderProduct","quantity","number","int","price","total","order","optional","_products","array","status","zenum","createdOn","notes","updatedOn","getOrder","orderId","snap","Row","product","description","picture_url","getProducts","products","img","rounded","Image","src","QuantitySelect","min","target","parseInt","change","round","newValue","ProductRow","remove","thisProduct","find","p","gridArea","minWidth","size","icon","textarea","Textarea","getNow","format","Date","databaseTimeFormat","addOrder","now","getOrderTotal","orderPayload","ordersRef","addDoc","productsRef","productWidthOutId","setDoc","userOrdersRef","userOrderPayload","map","reduce","prev","curr","editOrder","oldProductsRef","productRef","deleteDoc","Overlay","overlayContext","overlay","setOverlay","spin","keyframes","Spinner","FontAwesomeIcon","OverlayProvider","useEffect","document","body","overflow","window","scrollTo","Popup","ul","isOpen","Item","li","selected","blue2","Select","options","onSelect","selectRef","useRef","useSelect","items","onSelectedItemChange","selectedItem","getToggleButtonProps","getMenuProps","highlightedIndex","getItemProps","openMenu","closeMenu","e","paddingLeft","item","index","OrderForm","prevValues","productsQuery","create","createOrder","onMutate","queryClient","refetchQueries","mutateAsync","edit","getInitialValues","mutators","arrayMutators","pristine","noProductSelected","isAnyQuantityMissing","includes","availableProducts","getAvailableProducts","mapProductsToOptions","selectedProduct","marginLeft","fields","textAlign","filter","getOrderProducts","Order","orderQuery","orderProductsQuery","orderData","productsData","orderStatus","userOrder","getUserOrders","orderBy","orders","orange","Chip","gradientRatio","speed","backgroundColor","foregroundColor","OrdersLoader","paddingTop","mapStatusToText","OPEN","CLOSED","mapStatusToVariant","Orders","userOrdersQuery","console","log","process","paddingY","getCreatedOnValue","dateString","date","parseIso","time","isToday","isYesterday","Tab","pathname","useLocation","TabStyled","isActive","gray2","TabList","gray1","UserProfile","UserAccount","from","NoMatch","NewOrder","config","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","databaseURL","REACT_APP_DATEBASE_URL","Route","Logout","Thumbnail","large","ProductTile","top","bottom","left","right","flexGrow","breakpoints","mobile","tablet","desktop","blue1","gray5","purple","breakpointList","first","rules","parseBreakpointList","getBreakpointMediaQueryRules","join","interpolations","breakpointNames","split","str","trim","breakpointsDefinition","breakpointValues","indexOf","nextValue","getBreakpointRange","start","end","rule","Object","ProductsGrid","key","Products","App","initFirebase","exact","GlobalStyle","createGlobalStyle","library","add","faCoffee","faTimes","faFan","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.82774c0a.chunk.js","sourcesContent":["import { forwardRef, ReactNode } from \"react\";\nimport styled from \"styled-components/macro\";\nimport {\n  color,\n  ColorProps,\n  typography,\n  TypographyProps,\n  shadow,\n  ShadowProps,\n  compose,\n  space,\n  SpaceProps,\n  LayoutProps,\n  layout,\n} from \"styled-system\";\n\ntype Props = {\n  children: ReactNode;\n  as?: string | React.ComponentType<any>;\n  className?: string;\n} & StyledProps;\n\nconst Text = forwardRef(\n  ({ as = \"span\", className, children, ...props }: Props, ref) => (\n    <Container ref={ref} className={className} as={as} {...props}>\n      {children}\n    </Container>\n  )\n);\n\ntype StyledProps = TypographyProps &\n  ColorProps &\n  ShadowProps &\n  SpaceProps &\n  LayoutProps;\n\nconst Container = styled.span<StyledProps>`\n  white-space: pre-line;\n\n  ${compose(typography, color, shadow, space, layout)}\n`;\n\nexport default Text;\n","import Text from \"components/Text\";\nimport React, { MouseEventHandler, ReactNode } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { space, SpaceProps } from \"styled-system\";\n\ntype Props = {\n  variant?: Variant;\n} & ButtonCommonProps;\n\nconst Button = ({\n  variant = \"primary\",\n  children,\n  disabled = false,\n  onClick,\n  type,\n  ...props\n}: Props) => {\n  return (\n    <Container\n      variant={variant}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n      {...props}\n    >\n      <Text>{children}</Text>\n    </Container>\n  );\n};\n\nexport const BUTTON_HEIGHT = \"35px\";\n\ntype ContainerProps = Required<Pick<Props, \"variant\" | \"disabled\">>;\nconst Container = styled.button<ContainerProps>`\n  height: ${BUTTON_HEIGHT};\n  border: none;\n  padding: 5px;\n  min-width: 150px;\n  border-radius: ${(props) => props.theme.radii.small};\n  cursor: pointer;\n\n  background: ${(props) => {\n    if (props.disabled) return props.theme.colors.gray7;\n    return props.theme.colors[variantToBackground[props.variant]];\n  }};\n  color: ${(props) => {\n    if (props.disabled) return props.theme.colors.white;\n    return props.theme.colors[variantToColor[props.variant]];\n  }};\n\n  ${space};\n`;\n\nconst variantToBackground: Record<Variant, string> = {\n  primary: \"blue1\",\n  secondary: \"blue2\",\n};\n\nconst variantToColor: Record<Variant, string> = {\n  primary: \"white\",\n  secondary: \"blue\",\n};\n\ntype Variant = \"primary\" | \"secondary\";\n\nexport type ButtonCommonProps = {\n  children: ReactNode;\n  disabled?: boolean;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  type?: \"button\" | \"submit\" | \"reset\";\n} & SpaceProps;\n\nexport default Button;\n","import React, { ReactNode } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype Props = {\n  children: ReactNode;\n};\nconst Page = ({ children }: Props) => {\n  return <Container>{children}</Container>;\n};\n\nexport const maxWidthStyles = css`\n  max-width: 1250px;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 50px;\n  border: 1px solid red;\n  ${maxWidthStyles}\n`;\n\nexport default Page;\n","import { User } from \"api/models/user\";\nimport { useState } from \"react\";\nimport { ReactNode } from \"react\";\nimport { createContext } from \"react\";\nimport React from \"react\";\n\nexport type UserContext = {\n  profile: User | undefined;\n  setProfile: React.Dispatch<React.SetStateAction<User | undefined>>;\n};\n\nexport const userContext = createContext<UserContext>({\n  profile: undefined,\n  setProfile: () => undefined,\n});\n\ntype Props = {\n  children: ReactNode;\n};\nconst UserProvider = ({ children }: Props) => {\n  const [profile, setProfile] = useState<User>();\n\n  return (\n    <userContext.Provider value={{ profile, setProfile }}>\n      {children}\n    </userContext.Provider>\n  );\n};\n\nexport default UserProvider;\n","import React, { ReactNode } from \"react\";\nimport { Link as LinkRouter } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\n\ntype Props = {\n  children: ReactNode;\n  to: string;\n};\n\nconst Link = (props: Props) => {\n  return (\n    <LinkStyleButton as={LinkRouter} to={props.to}>\n      {props.children}\n    </LinkStyleButton>\n  );\n};\n\nexport const LinkStyleButton = styled.button`\n  color: ${(props) => props.theme.colors.blue};\n  text-decoration: none;\n  background-color: none;\n  padding: none;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 15px;\n  font-family: \"Roboto\";\n`;\n\nexport default Link;\n","import React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\nimport Button from \"components/Button\";\nimport { maxWidthStyles } from \"components/Page\";\nimport { useContext } from \"react\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\nimport Link from \"components/Link\";\n\nconst Navigation = () => {\n  const { profile, setProfile } = useContext<UserContext>(userContext);\n  const { path } = useRouteMatch<{ id: string }>();\n  const history = useHistory();\n\n  return (\n    <Wrapper>\n      <Container>\n        <Link to=\"/products\">Produkty</Link>\n\n        {profile ? (\n          <>\n            <Link to=\"/konto\">Konto uzytkownika</Link>\n            <Button\n              onClick={() => {\n                setProfile(undefined);\n                history.push(\"/logout\");\n              }}\n            >\n              Wyloguj się\n            </Button>\n          </>\n        ) : (\n          <>\n            <Link to=\"/register\">Zarejestruj</Link>\n            {path !== \"/login\" && <Link to=\"/login\">Login</Link>}\n          </>\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  display: flex;\n  padding-left: auto;\n  height: 60px;\n  align-items: center;\n  width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: ${(props) => props.theme.colors.white};\n  justify-content: center;\n\n  & > * > *:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  ${maxWidthStyles}\n`;\n\nexport default Navigation;\n","import styled from \"styled-components/macro\";\nimport {\n  compose,\n  space,\n  border,\n  BorderProps,\n  SpaceProps,\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  background,\n  BackgroundProps,\n  color,\n  ColorProps,\n  shadow,\n  ShadowProps,\n  grid,\n  GridProps,\n} from \"styled-system\";\n\ntype Props = LayoutProps &\n  SpaceProps &\n  BorderProps &\n  PositionProps &\n  ColorProps &\n  BackgroundProps &\n  ShadowProps &\n  GridProps;\n\nconst Box = styled.div<Props>`\n  ${compose(layout, space, border, position, background, color, shadow, grid)}\n`;\n\nexport default Box;\n","import styled from \"styled-components/macro\";\nimport Box from \"../Box\";\nimport { flexbox, FlexboxProps } from \"styled-system\";\n\ntype Props = FlexboxProps;\n\nconst Flexbox = styled(Box).attrs((props) => ({\n  display: \"flex\",\n}))<Props>`\n  ${flexbox}\n`;\n\nexport default Flexbox;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { maxWidthStyles } from \".\";\nimport Navigation from \"pages/App/Navigation\";\nimport Flexbox from \"components/Flexbox\";\n\ntype Props = {\n  children?: ReactNode;\n};\n\nconst Header = ({ children }: Props) => (\n  <Flexbox\n    as=\"header\"\n    flexDirection=\"column\"\n    position=\"relative\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    width=\"100%\"\n  >\n    <Navigation />\n    {children && <Title>{children}</Title>}\n  </Flexbox>\n);\n\nconst Title = styled.h1`\n  ${maxWidthStyles}\n`;\n\nexport default Header;\n","import { object, string, TypeOf } from \"zod\";\n\nconst authorization = object({\n  login: string(),\n  password: string(),\n});\n\nexport type Authorization = TypeOf<typeof authorization>;\n\nconst user = object({\n  _id: string(),\n  authorization,\n  contact: object({\n    email: string(),\n    phone_number: string(),\n  }),\n\n  address: object({\n    name: string(),\n    street: string(),\n    post_code: string(),\n    city: string(),\n    country: string(),\n  }),\n\n  billing_address: object({\n    name: string(),\n    street: string(),\n    post_code: string(),\n    city: string(),\n    country: string(),\n  }),\n});\n\nexport type User = TypeOf<typeof user>;\n\nexport default user;\n\nexport const emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const phoneNumberRegex = /^\\+48\\d{9}$/;\n\nexport const postCodeRegex = /^\\d{2}-\\d{3}$/;\n","import { DocumentData, DocumentSnapshot } from \"firebase/firestore\";\nimport { Schema } from \"zod\";\n\nfunction parseApiResponse<T>(\n  schema: Schema<T>,\n  response: DocumentSnapshot<DocumentData>\n): T {\n  if (response.exists()) {\n    const data = response.data();\n    const id = response.id;\n\n    const obj = { ...data, _id: id };\n    const parsedResponse = schema.safeParse(obj);\n\n    if (parsedResponse.success) {\n      return parsedResponse.data;\n    } else {\n      throw new Error(parsedResponse.error.message);\n    }\n  } else {\n    throw new Error(\"Error Parse\");\n  }\n}\n\nexport default parseApiResponse;\n","import { DocumentData, QuerySnapshot } from \"@firebase/firestore\";\nimport { Schema } from \"zod\";\nimport parseApiResponse from \"./parseApiResponse\";\n\nfunction getCollection<T>(\n  snapshot: QuerySnapshot<DocumentData>,\n  schema: Schema<T>\n): T[] {\n  let records: T[] = [];\n\n  snapshot.forEach((elem) => {\n    const parsedElem = parseApiResponse(schema, elem);\n    records.push(parsedElem);\n  });\n\n  return records;\n}\n\nexport default getCollection;\n","import {\n  collection,\n  query,\n  where,\n  getFirestore,\n  getDocs,\n} from \"firebase/firestore\";\nimport user, { Authorization } from \"api/models/user\";\nimport getCollection from \"utils/getCollection\";\n\nconst getAuthorization = async (params: Authorization) => {\n  const { login, password } = params;\n\n  const db = getFirestore();\n  const ref = collection(db, \"users\");\n  const q = query(\n    ref,\n    where(\"authorization.login\", \"==\", login),\n    where(\"authorization.password\", \"==\", password)\n  );\n\n  const snapshot = await getDocs(q);\n  const users = getCollection(snapshot, user);\n\n  if (users.length === 1) {\n    return users[0];\n  } else {\n    throw new Error(\"Błąd autoryzacji\");\n  }\n};\n\nexport default getAuthorization;\n","import styled from \"styled-components\";\nimport {\n  flexbox,\n  FlexboxProps,\n  layout,\n  LayoutProps,\n  padding,\n  PaddingProps,\n  space,\n  SpaceProps,\n} from \"styled-system\";\n\ntype TileProps = PaddingProps & SpaceProps & LayoutProps & FlexboxProps;\nconst Tile = styled.div<TileProps>`\n  display: flex;\n  flex-direction: column;\n  border-radius: ${(props) => props.theme.radii.medium};\n  padding: 20px;\n  border: 1px solid #dde0e5;\n  margin-top: 20px;\n  background: white;\n\n  ${padding};\n  ${space};\n  ${layout};\n  ${flexbox};\n`;\n\nexport default Tile;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/Button\";\nimport Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\nimport { Field, Form } from \"react-final-form\";\nimport { useForm } from \"./form\";\nimport Tile from \"components/Tile\";\n\nconst Login = () => {\n  const { onSubmit, isSuccess } = useForm();\n\n  return (\n    <>\n      <Header>Zaloguj się</Header>\n      <Page>\n        <Wrapper>\n          {isSuccess ? (\n            <h2>Udało się zalogować</h2>\n          ) : (\n            <Form\n              onSubmit={onSubmit}\n              initialValues={{\n                login: \"2\",\n                password: \"beta\",\n              }}\n            >\n              {({ handleSubmit }) => (\n                <Tile width=\"400px\" as=\"form\" onSubmit={handleSubmit}>\n                  <Field name=\"login\">\n                    {(props) => (\n                      <InputStyled\n                        placeholder=\"login\"\n                        value={props.input.value}\n                        onChange={props.input.onChange}\n                      />\n                    )}\n                  </Field>\n\n                  <Field name=\"password\">\n                    {(props) => (\n                      <InputStyled\n                        value={props.input.value}\n                        onChange={props.input.onChange}\n                        placeholder=\"password\"\n                      />\n                    )}\n                  </Field>\n\n                  <Button type=\"submit\">Zaloguj się</Button>\n                </Tile>\n              )}\n            </Form>\n          )}\n        </Wrapper>\n      </Page>\n    </>\n  );\n};\n\nconst InputStyled = styled.input`\n  height: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Login;\n","import { useMutation } from \"react-query\";\nimport getAuthorization from \"api/getAuthorization\";\nimport { Authorization, User } from \"api/models/user\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\nimport { useContext } from \"react\";\n\nexport const useForm = () => {\n  const { setProfile } = useContext<UserContext>(userContext);\n  const { mutate, isSuccess } = useMutation<User, unknown, Authorization>(\n    getAuthorization,\n    {\n      onSuccess: (user) => {\n        setProfile(user);\n      },\n    }\n  );\n\n  const onSubmit = (values: Authorization) => mutate(values);\n\n  return {\n    onSubmit,\n    isSuccess,\n  };\n};\n","import React from \"react\";\nimport Header from \"components/Page/Header\";\nimport Page from \"components/Page\";\n\nconst Main = () => {\n  return (\n    <>\n      <Header>Strona Główna</Header>\n      <Page>Main Page Content</Page>\n    </>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"components/Page/Header\";\n\nconst Register = () => {\n  return (\n    <>\n      <Header>Register Page</Header>\n    </>\n  );\n};\n\nexport default Register;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  children: ReactNode;\n};\nconst PageColumns = ({ children }: Props) => {\n  return <Container>{children}</Container>;\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: 2.1fr 0.9fr;\n`;\n\nexport default PageColumns;\n","import { QueryFunctionContext } from \"react-query\";\nimport { doc, getDoc, getFirestore } from \"@firebase/firestore\";\nimport user from \"api/models/user\";\nimport parseApiResponse from \"utils/parseApiResponse\";\n\nconst getUser = async (\n  params: QueryFunctionContext<[string, string], number>\n) => {\n  const userId = params.queryKey[1];\n\n  const db = getFirestore();\n  const usersRef = doc(db, \"users\", userId);\n  const usersSnap = await getDoc(usersRef);\n  const response = parseApiResponse(user, usersSnap);\n\n  return response;\n};\n\nexport default getUser;\n","import React from \"react\";\nimport { ReactElement } from \"react\";\nimport { ReactNode } from \"react\";\nimport { UseQueryResult } from \"react-query\";\n\ntype Props<T> = {\n  children: (data: T) => ReactNode;\n  query: UseQueryResult<T>;\n  Loader?: ReactElement;\n};\n\nfunction QueryLoader<T>({ children, query, Loader }: Props<T>): JSX.Element {\n  if (query.isFetching) {\n    if (Loader) {\n      return Loader;\n    } else {\n      return <p style={{ border: \"2px solid red\" }}>loading...</p>;\n    }\n  } else if (query.isSuccess) {\n    // if (Loader) {\n    //   return Loader;\n    // }\n    return <>{children(query.data as T)}</>;\n  } else {\n    return <p>ERROR</p>;\n  }\n}\n\nexport default QueryLoader;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\ntype Props = SpaceProps;\n\nconst Separator = styled.hr<Props>`\n  width: 100%;\n  background: ${(props) => props.theme.colors.gray3};\n  border: none;\n  height: 1px;\n  margin: 20px 0;\n\n  ${space};\n`;\n\nexport default Separator;\n","import Flexbox from \"components/Flexbox\";\nimport Separator from \"components/Separator\";\nimport Text from \"components/Text\";\nimport React, { ReactNode } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype Props = {\n  title: string;\n  children?: ReactNode;\n};\n\nconst TileHeader = (props: Props) => {\n  return (\n    <Container>\n      <Flexbox alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"18px\" fontWeight=\"600\" margin={0} as=\"h3\">\n          {props.title}\n        </Text>\n        {props.children}\n      </Flexbox>\n      <Separator />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default TileHeader;\n","import Box from \"components/Box\";\nimport Separator from \"components/Separator\";\nimport Tile from \"components/Tile\";\nimport ContentLoader from \"react-content-loader\";\n\nconst CompanyInfoLoader = () => (\n  <Tile>\n    <Box width=\"102.15px\" height=\"24px\">\n      <ContentLoader viewBox=\"0 0 102.15 24\">\n        <rect width=\"102.15\" height=\"24\" />\n      </ContentLoader>\n    </Box>\n\n    <Separator />\n\n    <AddressRow length=\"long\" />\n    <AddressRow length=\"medium\" />\n    <AddressRow length=\"short\" />\n  </Tile>\n);\n\ntype AddressRowProps = { length: \"long\" | \"medium\" | \"short\" };\nconst AddressRow = ({ length }: AddressRowProps) => {\n  let num: string;\n  if (length === \"long\") {\n    num = \"196\";\n  } else if (length === \"medium\") {\n    num = \"145\";\n  } else {\n    num = \"102\";\n  }\n\n  return (\n    <Box width={`${num}px`} height=\"21.6px\">\n      <ContentLoader viewBox={`0 0 ${num} 21.6`}>\n        <rect width={num} height=\"21.6\" />\n      </ContentLoader>\n    </Box>\n  );\n};\n\nexport default CompanyInfoLoader;\n","import getUser from \"api/users/getUser\";\nimport Flexbox from \"components/Flexbox\";\nimport QueryLoader from \"components/QueryLoader\";\nimport Text from \"components/Text\";\nimport Tile from \"components/Tile\";\nimport TileHeader from \"components/TileHeader\";\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\nimport CompanyInfoLoader from \"./index.loader\";\n\nconst CompanyInfo = () => {\n  const { profile } = useContext<UserContext>(userContext);\n  if (!profile) throw new Error(\"alfa\");\n\n  const userQuery = useQuery([\"user\", profile._id], getUser);\n\n  return (\n    <QueryLoader Loader={<CompanyInfoLoader />} query={userQuery}>\n      {(data) => (\n        <Tile>\n          <Flexbox flexDirection=\"column\">\n            <TileHeader title=\"Dane klienta\" />\n\n            <Text>{data.address.name}</Text>\n            <Text>{data.address.street}</Text>\n            <Text>\n              {data.address.post_code} {data.address.city}\n            </Text>\n            <Text>{data.address.country}</Text>\n          </Flexbox>\n        </Tile>\n      )}\n    </QueryLoader>\n  );\n};\n\nexport default CompanyInfo;\n","function sliceIdFromPayload<T>(payload: T) {\n  // @ts-ignore\n  const { _i, ...rest } = payload;\n\n  return rest;\n}\n\nexport default sliceIdFromPayload;\n","import sliceIdFromPayload from \"api/utils/sliceIdFromPayload\";\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\nimport { User } from \"api/models/user\";\n\nconst editUser = async (params: User) => {\n  const id = params._id;\n\n  const db = getFirestore();\n  const userRef = doc(db, \"users\", id);\n\n  const payload = sliceIdFromPayload(params);\n  updateDoc(userRef, payload);\n};\n\nexport default editUser;\n","import { BUTTON_HEIGHT } from \"components/Button\";\nimport { ChangeEventHandler } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype Props = {\n  disabled?: boolean;\n  min?: string;\n  type?: string;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  value: string;\n  maxWidth?: string;\n};\n\nconst Input = ({ maxWidth, ...props }: Props) => {\n  return (\n    <InputBox maxWidth={maxWidth}>\n      <InputStyled {...props}></InputStyled>\n    </InputBox>\n  );\n};\n\ntype InputStyledProps = Pick<Props, \"maxWidth\">;\nexport const InputBox = styled.div<InputStyledProps>`\n  border: 1px solid ${(props) => props.theme.colors.gray4};\n  height: ${BUTTON_HEIGHT};\n  width: min-content;\n  justify-content: flex-start;\n  align-items: center;\n  display: flex;\n  border-radius: ${(props) => props.theme.radii.small};\n  max-width: ${(props) => props.maxWidth};\n  width: 100%;\n  position: relative;\n`;\n\nconst InputStyled = styled.input`\n  height: 100%;\n  background: transparent;\n  border: none;\n  padding: 0 5px;\n  width: 100%;\n`;\n\nexport default Input;\n","import Text from \"components/Text\";\nimport { ReactNode } from \"react\";\nimport { space, SpaceProps } from \"styled-system\";\nimport styled from \"styled-components/macro\";\n\ntype Props = {\n  children: ReactNode;\n  title: string;\n} & SpaceProps;\n\nconst Label = ({ children, title, ...props }: Props) => (\n  <Container {...props}>\n    <Text marginBottom=\"5px\">{title}</Text>\n    {children}\n  </Container>\n);\n\nconst Container = styled.label`\n  display: flex;\n  margin-top: 10px;\n  flex-direction: column;\n\n  ${space}\n`;\nexport default Label;\n","import Text from \"components/Text\";\nimport { ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst SectionTitle = ({ children }: Props) => {\n  return (\n    <Text margin=\"0 0 10px\" as=\"h4\">\n      {children}\n    </Text>\n  );\n};\n\nexport default SectionTitle;\n","import { ButtonCommonProps } from \"./Button\";\nimport { LinkStyleButton } from \"./Link\";\n\ntype Props = ButtonCommonProps;\n\nconst TextButton = (props: Props) => {\n  return <LinkStyleButton {...props} />;\n};\n\nexport default TextButton;\n","import styled from \"styled-components\";\nimport Tile from \"./Tile\";\n\ntype Props = {\n  variant: \"fail\" | \"success\";\n};\n\nconst ResultScreen = ({ variant }: Props) => {\n  return <Container variant={variant}>Result</Container>;\n};\n\ntype ContainerProps = Pick<Props, \"variant\">;\nconst Container = styled(Tile)<ContainerProps>`\n  min-height: 400px;\n  border: 3px solid;\n  border-color: ${(props) => {\n    if (props.variant === \"fail\") {\n      return props.theme.colors.red;\n    }\n\n    return props.theme.colors.green;\n  }};\n`;\n\nexport default ResultScreen;\n","import Flexbox from \"components/Flexbox\";\nimport Text from \"components/Text\";\n\nimport React, { ReactNode } from \"react\";\nimport { FieldMetaState } from \"react-final-form\";\n\ntype Props<TFormValues> = {\n  children: ReactNode;\n  meta: FieldMetaState<TFormValues>;\n};\n\nfunction InputError<TFormValues>({ meta, children }: Props<TFormValues>) {\n  return (\n    <Flexbox flexDirection=\"column\">\n      {children}\n\n      {(meta.error || meta.submitError) && (\n        <Text color=\"red\">{meta.error || meta.submitError}</Text>\n      )}\n    </Flexbox>\n  );\n}\n\nexport default InputError;\n","import Box from \"components/Box\";\nimport Flexbox from \"components/Flexbox\";\nimport { InputBox } from \"components/Input\";\nimport Separator from \"components/Separator\";\nimport Tile from \"components/Tile\";\nimport React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst EditFormLoader = () => (\n  <Tile>\n    <Box width=\"810.6px\" height=\"24px\">\n      <ContentLoader viewBox=\"0 0 810.6 24\">\n        <rect width=\"88\" height=\"24\" />\n        <rect width=\"84\" height=\"19.6\" transform=\"translate(730, 2.2)\" />\n      </ContentLoader>\n    </Box>\n\n    <Separator />\n\n    <SectionTitle />\n    <InputWithLabel />\n    <InputWithLabel />\n    <InputWithLabel />\n\n    <SectionTitle />\n    <InputWithLabel />\n    <InputWithLabel />\n    <InputWithLabel />\n    <InputWithLabel />\n  </Tile>\n);\n\nconst SectionTitle = () => (\n  <Box width=\"135px\" height=\"21.6px\" marginBottom=\"20px\">\n    <ContentLoader viewBox=\"0 0 135 21.6\">\n      <rect width=\"135\" height=\"21.6\" />\n    </ContentLoader>\n  </Box>\n);\n\nconst InputWithLabel = () => (\n  <Flexbox\n    width=\"808.6\"\n    height=\"61.6px\"\n    marginBottom=\"10px\"\n    flexDirection=\"column\"\n  >\n    <Box width=\"160px\" height=\"21.6px\" marginBottom=\"5px\">\n      <ContentLoader viewBox=\"0 0 160 21.6\">\n        <rect width=\"160\" height=\"21.6\" />\n      </ContentLoader>\n    </Box>\n    <Box width=\"100%\" height=\"21.6px\" marginBottom=\"5px\">\n      <InputBox>\n        <Flexbox height=\"100%\" alignItems=\"center\" width=\"135px\">\n          <ContentLoader viewBox=\"0 0 135 21.6\">\n            <rect width=\"135\" height=\"21.6\" />\n          </ContentLoader>\n        </Flexbox>\n      </InputBox>\n    </Box>\n  </Flexbox>\n);\nexport default EditFormLoader;\n","import React, { useContext, useState } from \"react\";\nimport getUser from \"api/users/getUser\";\nimport { useQuery } from \"react-query\";\nimport Flexbox from \"components/Flexbox\";\nimport Tile from \"components/Tile\";\nimport QueryLoader from \"components/QueryLoader\";\nimport { Field, Form } from \"react-final-form\";\nimport { FormValues, useForm } from \"../form\";\nimport TileHeader from \"components/TileHeader\";\nimport Input from \"components/Input\";\nimport Button from \"components/Button\";\nimport Label from \"components/Label\";\nimport SectionTitle from \"components/SectionTitle\";\nimport TextButton from \"components/TextButton\";\nimport ResultScreen from \"components/ResultScreen\";\nimport InputError from \"components/InputError\";\nimport { emailRegex, phoneNumberRegex, postCodeRegex } from \"api/models/user\";\nimport EditFormLoader from \"./index.loader\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\n\nconst EditForm = () => {\n  const { profile } = useContext<UserContext>(userContext);\n  if (!profile) throw new Error(\"alfa\");\n\n  const userQuery = useQuery([\"user\", profile._id], getUser);\n  const [view, setView] = useState<View>(\"form\");\n\n  const [editingForm, setEditingForm] = useState(false);\n  const { onSubmit, initialValues } = useForm(setEditingForm, setView);\n\n  if (view === \"success\") {\n    return <ResultScreen variant={view} />;\n  }\n\n  if (view === \"fail\") {\n    return <ResultScreen variant={view} />;\n  }\n\n  return (\n    <QueryLoader Loader={<EditFormLoader />} query={userQuery}>\n      {(data) => (\n        <Tile>\n          <Form onSubmit={onSubmit} initialValues={initialValues(data)}>\n            {({ handleSubmit, form }) => (\n              <Flexbox as=\"form\" onSubmit={handleSubmit} flexDirection=\"column\">\n                <TileHeader title=\"Ustawienia\">\n                  {!editingForm && (\n                    <TextButton onClick={() => setEditingForm(true)}>\n                      Edytuj dane\n                    </TextButton>\n                  )}\n                </TileHeader>\n\n                {data.contact && (\n                  <Flexbox flexDirection=\"column\">\n                    <SectionTitle>Dane kontaktowe</SectionTitle>\n\n                    <Field<FormValues[\"contact\"][\"email\"]>\n                      validate={(value) => {\n                        if (!value) {\n                          return \"To pole nie może być puste\";\n                        }\n\n                        if (!value.match(emailRegex)) {\n                          return \"Pole zostało źle wypełnione\";\n                        }\n                      }}\n                      name=\"contact.email\"\n                    >\n                      {(props) => (\n                        <InputError meta={props.meta}>\n                          <Label title=\"Email\">\n                            <Input disabled={!editingForm} {...props.input} />\n                          </Label>\n                        </InputError>\n                      )}\n                    </Field>\n\n                    <Field<FormValues[\"contact\"][\"phone_number\"]>\n                      validate={(value) => {\n                        if (!value) {\n                          return \"To pole nie może być puste\";\n                        }\n\n                        if (!value.match(phoneNumberRegex)) {\n                          return \"Numer telefonu powinien być w formacie +48XXXXXXXXX, gdzie X oznacza cyfrę\";\n                        }\n                      }}\n                      name=\"contact.phone_number\"\n                    >\n                      {(props) => (\n                        <InputError meta={props.meta}>\n                          <Label title=\"Numer telefonu\">\n                            <Input disabled={!editingForm} {...props.input} />\n                          </Label>\n                        </InputError>\n                      )}\n                    </Field>\n                  </Flexbox>\n                )}\n\n                <Flexbox marginTop=\"20px\" flexDirection=\"column\">\n                  <SectionTitle>Dane do wysyłki</SectionTitle>\n\n                  <Field<FormValues[\"billing_address\"][\"name\"]>\n                    validate={(value) => {\n                      if (!value) {\n                        return \"To pole nie może być puste\";\n                      }\n\n                      if (value.length < 5) {\n                        return \"Minimalna liczba znaków to 5\";\n                      }\n\n                      if (value.length > 255) {\n                        return \"Maksymalna liczba znaków to 255\";\n                      }\n                    }}\n                    name=\"billing_address.name\"\n                  >\n                    {(props) => (\n                      <InputError meta={props.meta}>\n                        <Label title=\"Nazwa klienta\">\n                          <Input disabled={!editingForm} {...props.input} />\n                        </Label>\n                      </InputError>\n                    )}\n                  </Field>\n\n                  <Field<FormValues[\"billing_address\"][\"street\"]>\n                    validate={(value) => {\n                      if (!value) {\n                        return \"To pole nie może być puste\";\n                      }\n                    }}\n                    name=\"billing_address.street\"\n                  >\n                    {(props) => (\n                      <InputError meta={props.meta}>\n                        <Label title=\"Ulica i numer lokalu/mieszkania\">\n                          <Input disabled={!editingForm} {...props.input} />\n                        </Label>\n                      </InputError>\n                    )}\n                  </Field>\n\n                  <Field<FormValues[\"billing_address\"][\"post_code\"]>\n                    validate={(value) => {\n                      if (!value) {\n                        return \"To pole nie może być puste\";\n                      }\n\n                      if (!value.match(postCodeRegex)) {\n                        return \"Prawidłowy format kodu pocztowego to XX-XXX, gdzie X oznacza cyfrę\";\n                      }\n                    }}\n                    name=\"billing_address.post_code\"\n                  >\n                    {(props) => (\n                      <InputError meta={props.meta}>\n                        <Label title=\"Kod pocztowy\">\n                          <Input disabled={!editingForm} {...props.input} />\n                        </Label>\n                      </InputError>\n                    )}\n                  </Field>\n\n                  <Field name=\"billing_address.country\">\n                    {(props) => (\n                      <InputError meta={props.meta}>\n                        <Label title=\"Państwo\">\n                          <Input disabled {...props.input} />\n                        </Label>\n                      </InputError>\n                    )}\n                  </Field>\n\n                  {editingForm && (\n                    <Flexbox justifyContent=\"flex-end\" marginTop=\"20px\">\n                      <Button\n                        onClick={(event) => {\n                          event.preventDefault();\n                          form.reset();\n                          setEditingForm(false);\n                        }}\n                        variant=\"secondary\"\n                        marginRight=\"10px\"\n                      >\n                        Anuluj\n                      </Button>\n                      <Button type=\"submit\">Zapisz zmiany</Button>\n                    </Flexbox>\n                  )}\n                </Flexbox>\n              </Flexbox>\n            )}\n          </Form>\n        </Tile>\n      )}\n    </QueryLoader>\n  );\n};\n\nexport type View = \"form\" | \"success\" | \"fail\";\n\nexport default EditForm;\n","import editUser from \"api/users/editUser\";\nimport { User } from \"api/models/user\";\nimport { useMutation } from \"react-query\";\nimport { View } from \"./EditForm/EditForm\";\n\nexport const useForm = (\n  setEditingForm: React.Dispatch<React.SetStateAction<boolean>>,\n  setView: React.Dispatch<React.SetStateAction<View>>\n) => {\n  const { mutate } = useMutation<unknown, unknown, User>(editUser, {\n    onSuccess: () => {\n      setEditingForm(false);\n      setView(\"success\");\n    },\n  });\n\n  const onSubmit = (values: User) => mutate(values);\n\n  const initialValues = (user: User) => user;\n\n  return {\n    onSubmit,\n    initialValues,\n  };\n};\n\nexport type FormValues = User;\n","import React from \"react\";\nimport PageColumns from \"components/PageColumns\";\nimport CompanyInfo from \"./CompanyInfo/CompanyInfo\";\nimport EditForm from \"./EditForm/EditForm\";\n\nconst Settings = () => (\n  <PageColumns>\n    <div>\n      <EditForm />\n    </div>\n    <div>\n      <CompanyInfo />\n    </div>\n  </PageColumns>\n);\n\nexport default Settings;\n","import { TypeOf, number, string, object } from \"zod\";\n\nconst orderProduct = object({\n  quantity: number().int(),\n  _id: string(),\n  price: number(),\n  name: string(),\n  total: number(),\n});\n\nexport type OrderProduct = TypeOf<typeof orderProduct>;\n\nexport default orderProduct;\n","import { object, string, TypeOf, number, enum as zenum, array } from \"zod\";\nimport orderProduct from \"./orderProduct\";\n\nexport const order = object({\n  _id: string().optional(),\n  _products: array(orderProduct).optional(),\n  status: zenum([\"OPEN\", \"CLOSED\"]),\n  total: number(),\n  createdOn: string(),\n  userId: string(),\n  notes: string(),\n  updatedOn: string(),\n});\n\nexport type Order = TypeOf<typeof order>;\n\nexport default order;\n","import { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport { QueryFunctionContext } from \"react-query\";\nimport order from \"api/models/order\";\nimport parseApiResponse from \"utils/parseApiResponse\";\n\nconst getOrder = async (\n  params: QueryFunctionContext<[string, string], number>\n) => {\n  const orderId = params.queryKey[1];\n\n  const db = getFirestore();\n  const ref = doc(db, \"orders\", orderId);\n  const snap = await getDoc(ref);\n  const response = parseApiResponse(order, snap);\n\n  return response;\n};\n\nexport default getOrder;\n","import styled from \"styled-components/macro\";\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(16, 1fr);\n  grid-gap: 0 10px;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default Row;\n","import { TypeOf, string, object, number } from \"zod\";\n\nconst product = object({\n  description: string(),\n  name: string(),\n  _id: string(),\n  price: number(),\n  picture_url: string(),\n});\n\nexport type Product = TypeOf<typeof product>;\n\nexport default product;\n","import { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport getCollection from \"utils/getCollection\";\nimport product from \"api/models/product\";\n\nconst getProducts = async () => {\n  const db = getFirestore();\n\n  const ref = collection(db, \"products\");\n  const snapshot = await getDocs(ref);\n  const products = getCollection(snapshot, product);\n\n  return products;\n};\n\nexport default getProducts;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  src: string;\n  rounded?: boolean;\n  border?: boolean;\n};\n\nconst Image = ({ src, rounded = false, border = true }: Props) => {\n  return <Container src={src} rounded={rounded} border={border} />;\n};\n\ntype ContainerProps = {\n  rounded: boolean;\n  border: boolean;\n};\n\nconst Container = styled.img<ContainerProps>`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${(props) => (props.border ? props.theme.colors.gray3 : \"transparent\")};\n  padding: ${(props) => props.border && \"5px\"};\n  border-radius: ${(props) =>\n    props.rounded ? \"50%\" : props.theme.radii.medium};\n`;\n\nexport default Image;\n","import { OrderProduct } from \"api/models/orderProduct\";\nimport React from \"react\";\nimport { Field, useForm } from \"react-final-form\";\nimport round from \"lodash/round\";\nimport Input from \"components/Input\";\n\ntype Props = {\n  name: string;\n  product: OrderProduct;\n  disabled?: boolean;\n};\n\nconst QuantitySelect = ({ name, product, disabled }: Props) => {\n  const form = useForm();\n\n  return (\n    <Field name={`${name}.quantity`}>\n      {({ input }) => (\n        <Input\n          maxWidth=\"100px\"\n          disabled={disabled || !product._id}\n          min=\"1\"\n          type={\"number\"}\n          {...input}\n          onChange={({ target: { value } }) => {\n            const total = product.price * parseInt(value);\n            form.change(`${name}.total`, round(total, 2));\n\n            const newValue = value === \"\" ? \"0\" : value;\n            input.onChange(parseInt(newValue));\n          }}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default QuantitySelect;\n","import { FormValues } from \"api/createOrder\";\nimport Box from \"components/Box\";\nimport Flexbox from \"components/Flexbox\";\nimport Image from \"components/Image\";\nimport { InputBox } from \"components/Input\";\nimport Link from \"components/Link\";\nimport Row from \"components/Row\";\nimport Text from \"components/Text\";\nimport TextButton from \"components/TextButton\";\nimport { OrderProduct } from \"api/models/orderProduct\";\nimport { Product } from \"api/models/product\";\nimport QuantitySelect from \"./QuantitySelect\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype Props = {\n  name: string;\n  products: Product[];\n  remove: () => void;\n  values: FormValues;\n  product: OrderProduct;\n  disabled: boolean;\n};\n\nconst ProductRow = ({\n  product,\n  name,\n  products,\n  remove,\n  values,\n  disabled,\n}: Props) => {\n  const { price, total, _id } = product;\n  const thisProduct = products.find((p) => p._id === _id);\n\n  return (\n    <Box marginTop=\"20px\">\n      <Row key={name}>\n        <Flexbox alignItems=\"center\" gridArea=\"1 / 1 / 1 / 8\">\n          {thisProduct?.picture_url && (\n            <Box\n              height=\"100px\"\n              minWidth=\"100px\"\n              maxWidth=\"100px\"\n              marginRight=\"20px\"\n            >\n              <Image src={thisProduct.picture_url} />\n            </Box>\n          )}\n\n          <Flexbox flexDirection=\"column\">\n            <Link to=\"/\">{thisProduct?.name}</Link>\n          </Flexbox>\n        </Flexbox>\n\n        <Flexbox alignItems=\"center\" gridArea=\"1 / 8 / 1 / 11\">\n          <InputBox maxWidth=\"100px\">\n            <Text padding=\"0 5px\">{price ? `${price}zł` : \"\"}</Text>\n          </InputBox>\n        </Flexbox>\n\n        <Flexbox alignItems=\"center\" gridArea=\"1 / 11 / 1 / 14\">\n          <QuantitySelect disabled={disabled} product={product} name={name} />\n        </Flexbox>\n\n        <Flexbox alignItems=\"center\" gridArea=\"1 / 14 / 1 / 16\">\n          <span>{total ? `${total}zł` : \"\"}</span>\n        </Flexbox>\n\n        <Flexbox alignItems=\"center\" gridArea=\"1 / 16 / 1 / 17\">\n          {!disabled && (\n            <TextButton\n              disabled={values._products?.length === 1}\n              onClick={(event) => {\n                event.preventDefault();\n                remove();\n              }}\n            >\n              <FontAwesomeIcon color=\"red\" size=\"lg\" icon=\"times\" />\n            </TextButton>\n          )}\n        </Flexbox>\n      </Row>\n    </Box>\n  );\n};\n\nexport default ProductRow;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { FieldInputProps } from \"react-final-form\";\n\ntype Props = FieldInputProps<string | undefined>;\n\nconst Textarea = (props: Props) => {\n  return <Container {...props} />;\n};\n\nconst Container = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n`;\n\nexport default Textarea;\n","import { format } from \"date-fns\";\n\nconst getNow = () => {\n  return format(new Date(), databaseTimeFormat);\n};\n\nexport default getNow;\n\nexport const databaseTimeFormat = \"yyyy-MM-dd HH:mm:ssX\";\n","import {\n  collection,\n  addDoc,\n  getFirestore,\n  doc,\n  setDoc,\n} from \"firebase/firestore\";\nimport { Order } from \"api/models/order\";\nimport round from \"lodash/round\";\nimport { UserOrder } from \"api/models/userOrder\";\nimport getNow from \"utils/getNow\";\n\nexport type FormValues = Order;\n\nconst addOrder = async (params: FormValues) => {\n  const db = getFirestore();\n\n  const now = getNow();\n  const total = getOrderTotal(params._products) ?? 0;\n\n  // Add order to /orders\n  const orderPayload: Order = {\n    status: params.status,\n    total,\n    userId: params.userId,\n    createdOn: now,\n    updatedOn: now,\n    notes: params.notes,\n  };\n\n  const ordersRef = collection(db, \"orders\");\n  const orderId = await addDoc(ordersRef, orderPayload);\n\n  // Add products to /orders/XXX/products\n  params._products?.forEach(async (product) => {\n    const productsRef = doc(db, \"orders\", orderId.id, \"products\", product._id);\n\n    const { _id, ...productWidthOutId } = product;\n    await setDoc(productsRef, productWidthOutId);\n  });\n\n  // Add order to /user/XXX/orders/XXX\n  const userOrdersRef = doc(db, \"users\", params.userId, \"orders\", orderId.id);\n  const userOrderPayload: UserOrder = {\n    total,\n    status: params.status,\n    createdOn: now,\n    updatedOn: now,\n  };\n\n  await setDoc(userOrdersRef, userOrderPayload);\n};\n\nconst getOrderTotal = (products: FormValues[\"_products\"]) =>\n  round(\n    products\n      ?.map((product) => product.price * product.quantity)\n      .reduce((prev, curr) => prev + curr) ?? 0,\n    2\n  );\n\nexport default addOrder;\n","import {\n  getFirestore,\n  doc,\n  setDoc,\n  updateDoc,\n  collection,\n  getDocs,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { Order } from \"api/models/order\";\nimport round from \"lodash/round\";\nimport getNow from \"utils/getNow\";\n\nexport type FormValues = Order;\n\nconst editOrder = async (params: FormValues) => {\n  const orderId = params._id;\n\n  if (!orderId) throw new Error(\"error\");\n\n  const db = getFirestore();\n\n  const now = getNow();\n  const total = getOrderTotal(params._products) ?? 0;\n\n  // Update order to /orders\n  const orderPayload: Omit<Order, \"createdOn\"> = {\n    status: params.status,\n    total,\n    userId: params.userId,\n    updatedOn: now,\n    notes: params.notes,\n  };\n\n  const ordersRef = doc(db, \"orders\", orderId);\n  updateDoc(ordersRef, orderPayload);\n\n  // Remove old products\n  const oldProductsRef = collection(db, \"orders\", orderId, \"products\");\n  const oldProducts = await getDocs(oldProductsRef);\n\n  oldProducts.forEach((product) => {\n    const productRef = doc(db, \"orders\", orderId, \"products\", product.id);\n    deleteDoc(productRef);\n  });\n\n  // Update products to /orders/XXX/products\n  params._products?.forEach(async (product) => {\n    const productsRef = doc(db, \"orders\", orderId, \"products\", product._id);\n\n    const { _id, ...productWidthOutId } = product;\n    await setDoc(productsRef, productWidthOutId);\n  });\n\n  // Update order to /user/XXX/orders/XXX\n  const userOrdersRef = doc(db, \"users\", params.userId, \"orders\", orderId);\n  const userOrderPayload = {\n    total,\n    status: params.status,\n    updatedOn: now,\n  };\n\n  await updateDoc(userOrdersRef, userOrderPayload);\n};\n\nconst getOrderTotal = (products: FormValues[\"_products\"]) =>\n  round(\n    products\n      ?.map((product) => product.price * product.quantity)\n      .reduce((prev, curr) => prev + curr) ?? 0,\n    2\n  );\n\nexport default editOrder;\n","import styled from \"styled-components\";\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Overlay;\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Overlay from \"components/Overlay\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport type OverlayContext = {\n  overlay: boolean | undefined;\n  setOverlay: React.Dispatch<React.SetStateAction<boolean | undefined>>;\n};\n\nexport const overlayContext = createContext<OverlayContext>({\n  overlay: undefined,\n  setOverlay: () => undefined,\n});\n\ntype Props = { children: ReactNode };\nconst OverlayProvider = ({ children }: Props) => {\n  const [overlay, setOverlay] = useState<boolean | undefined>(false);\n\n  useEffect(() => {\n    document.body.style.overflow = overlay ? \"hidden\" : \"auto\";\n    window.scrollTo(0, 0);\n  }, [overlay]);\n\n  return (\n    <>\n      {overlay && (\n        <Overlay>\n          <Spinner size=\"3x\" icon=\"fan\" />\n        </Overlay>\n      )}\n      <overlayContext.Provider value={{ overlay, setOverlay }}>\n        {children}\n      </overlayContext.Provider>\n    </>\n  );\n};\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled(FontAwesomeIcon)`\n  animation: 1s ${spin} linear infinite forwards;\n`;\n\nexport default OverlayProvider;\n","import { InputBox } from \"components/Input\";\nimport React from \"react\";\nimport { useSelect, UseSelectStateChange } from \"downshift\";\nimport styled from \"styled-components\";\nimport { useRef } from \"react\";\nimport Separator from \"components/Separator\";\nimport Text from \"components/Text\";\nimport Flexbox from \"components/Flexbox\";\n\ntype Props = {\n  options: Record<\"value\" | \"name\", string>[];\n  onSelect: (\n    value: UseSelectStateChange<Record<\"value\" | \"name\", string>>\n  ) => void;\n};\n\nconst Select = ({ options, onSelect }: Props) => {\n  const selectRef = useRef(null);\n  const {\n    isOpen,\n    selectedItem,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    openMenu,\n    closeMenu,\n  } = useSelect({\n    items: options,\n    onSelectedItemChange: onSelect,\n  });\n\n  return (\n    <InputBox ref={selectRef}>\n      <Button\n        {...getToggleButtonProps()}\n        onClick={(e) => {\n          e.preventDefault();\n          isOpen ? closeMenu() : openMenu();\n        }}\n      >\n        {selectedItem?.name || \"Wybierz produkt\"}\n      </Button>\n\n      <Popup {...getMenuProps()} isOpen={isOpen}>\n        <Flexbox alignItems=\"center\" paddingLeft=\"5px\" height=\"35px\">\n          <Text>Wybierz produkt</Text>\n        </Flexbox>\n        <Separator margin={\"0\"} />\n        {isOpen && options.length === 0 ? (\n          <Item selected={false}>\n            <Text>Zostały wybrane już wszystkie dostępne produkty</Text>\n          </Item>\n        ) : (\n          options.map((item, index) => (\n            <>\n              <Item\n                selected={highlightedIndex === index}\n                key={`${item}${index}`}\n                {...getItemProps({ item, index })}\n              >\n                {item.name}\n              </Item>\n              {index !== options.length - 1 && <Separator margin=\"0\" />}\n            </>\n          ))\n        )}\n      </Popup>\n    </InputBox>\n  );\n};\n\nconst Button = styled.button`\n  width: 100%;\n  height: 100%;\n  background: none;\n  padding: 0 10px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border: none;\n`;\n\ntype PopupProps = {\n  isOpen: boolean;\n};\nconst Popup = styled.ul<PopupProps>`\n  position: absolute;\n  top: -1px;\n  left: -1px;\n  margin: 0;\n  right: -1px;\n  list-style-type: none;\n  padding-left: 0;\n  background: white;\n  border: 1px solid ${(props) => props.theme.colors.gray4};\n  display: ${(props) => (props.isOpen ? \"flex\" : \"none\")};\n  flex-direction: column;\n  border-radius: ${(props) => props.theme.radii.small};\n`;\n\ntype ItemProps = {\n  selected: boolean;\n};\n\nconst Item = styled.li<ItemProps>`\n  padding-left: none;\n  height: 35px;\n  display: flex;\n  align-items: center;\n  padding: 0 5px;\n  background: ${(props) =>\n    props.selected ? props.theme.colors.blue2 : \"white\"};\n  border-radius: ${(props) => props.theme.radii.small};\n`;\n\nexport default Select;\n","import React, { useState } from \"react\";\nimport Tile from \"components/Tile\";\nimport { Field, Form } from \"react-final-form\";\nimport Flexbox from \"components/Flexbox\";\nimport arrayMutators from \"final-form-arrays\";\nimport { useQuery } from \"react-query\";\nimport { FormValues } from \"api/createOrder\";\nimport TileHeader from \"components/TileHeader\";\nimport Box from \"components/Box\";\nimport Row from \"components/Row\";\nimport Text from \"components/Text\";\nimport Separator from \"components/Separator\";\nimport getProducts from \"api/products/getProducts\";\nimport { OrderProduct } from \"api/models/orderProduct\";\nimport Button from \"components/Button\";\nimport ProductRow from \"./ProductRow\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport Textarea from \"components/Textarea\";\nimport { getInitialProduct, useForm, View } from \"./form\";\nimport QueryLoader from \"components/QueryLoader\";\nimport { Order } from \"api/models/order\";\nimport Label from \"components/Label\";\nimport Select from \"components/Select\";\nimport { Product } from \"api/models/product\";\nimport ResultScreen from \"components/ResultScreen\";\nimport TextButton from \"components/TextButton\";\nimport { useContext } from \"react\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\n\ntype Props = {\n  prevValues?: Order;\n};\n\nconst OrderForm = ({ prevValues }: Props) => {\n  const { profile } = useContext<UserContext>(userContext);\n  if (!profile) throw new Error(\"alfa\");\n\n  const [view, setView] = useState<View>(\"form\");\n\n  const [editingForm, setEditingForm] = useState(!prevValues);\n\n  const productsQuery = useQuery(\"products\", getProducts);\n  const { onSubmit, getInitialValues } = useForm(\n    profile._id,\n    setView,\n    prevValues\n  );\n\n  if (view === \"success\") {\n    return <ResultScreen variant=\"success\" />;\n  }\n\n  return (\n    <QueryLoader query={productsQuery}>\n      {(products) => (\n        <Tile>\n          <TileHeader title=\"Formularz zamówienia\">\n            {prevValues && (\n              <TextButton onClick={() => setEditingForm(true)}>\n                Edytuj\n              </TextButton>\n            )}\n          </TileHeader>\n\n          <Form<FormValues>\n            onSubmit={onSubmit}\n            initialValues={getInitialValues()}\n            mutators={{\n              ...arrayMutators,\n            }}\n          >\n            {({\n              values,\n              handleSubmit,\n              form: {\n                mutators: { push },\n                reset,\n              },\n              pristine,\n            }) => {\n              const noProductSelected = values._products?.length === 0;\n              const isAnyQuantityMissing = values._products\n                ?.map((product) => product.quantity !== 0)\n                .includes(false);\n              const availableProducts = getAvailableProducts(products, values);\n\n              return (\n                <Flexbox\n                  flexDirection=\"column\"\n                  as=\"form\"\n                  onSubmit={handleSubmit}\n                >\n                  <Flexbox marginBottom=\"20px\">\n                    <Select\n                      options={mapProductsToOptions(availableProducts)}\n                      onSelect={({ selectedItem }) => {\n                        const selectedProduct = availableProducts.find(\n                          (product) => product._id === selectedItem?.value\n                        );\n\n                        if (!selectedProduct) return null;\n\n                        push(\"_products\", getInitialProduct(selectedProduct));\n                      }}\n                    />\n                    <Button marginLeft=\"10px\" variant=\"secondary\">\n                      Przeglądaj produkty\n                    </Button>\n                  </Flexbox>\n\n                  <Row>\n                    <Box gridArea=\"1 / 1 / 1 / 8\">\n                      <Text>Produkt</Text>\n                    </Box>\n\n                    <Box gridArea=\"1 / 8 / 1 / 11\">\n                      <Text>Cena za sztukę</Text>\n                    </Box>\n\n                    <Box gridArea=\"1 / 11 / 1 / 14\">\n                      <Text>Ilość</Text>\n                    </Box>\n\n                    <Box gridArea=\"1 / 14 / 1 / 16\">\n                      <Text>Kwota</Text>\n                    </Box>\n                  </Row>\n\n                  <Separator margin=\"10px 0 0\" />\n\n                  <FieldArray<OrderProduct> name=\"_products\">\n                    {({ fields }) => (\n                      <>\n                        {fields.length === 0 ? (\n                          <Text textAlign=\"center\">\n                            Zamówienie musi zawierać co najmniej 1 produkt.\n                          </Text>\n                        ) : (\n                          fields.map((name, index) => (\n                            <ProductRow\n                              disabled={!editingForm}\n                              values={values}\n                              remove={() => fields.remove(index)}\n                              name={name}\n                              products={products}\n                              product={fields.value[index]}\n                            />\n                          ))\n                        )}\n                      </>\n                    )}\n                  </FieldArray>\n\n                  <Separator />\n\n                  <Box width=\"100%\">\n                    <Field<FormValues[\"notes\"]> name=\"notes\">\n                      {(props) => (\n                        <Label marginTop={0} title=\"Uwagi do zamówienia\">\n                          <Textarea {...props.input} disabled={!editingForm} />\n                        </Label>\n                      )}\n                    </Field>\n                  </Box>\n\n                  <Flexbox marginTop=\"20px\" justifyContent=\"flex-end\">\n                    {prevValues && editingForm && (\n                      <Button\n                        variant=\"secondary\"\n                        marginRight=\"10px\"\n                        onClick={(event) => {\n                          event.preventDefault();\n                          reset();\n                          setEditingForm(false);\n                        }}\n                      >\n                        Anuluj\n                      </Button>\n                    )}\n                    <Button\n                      disabled={\n                        prevValues\n                          ? pristine ||\n                            noProductSelected ||\n                            isAnyQuantityMissing\n                          : noProductSelected || isAnyQuantityMissing\n                      }\n                      type=\"submit\"\n                    >\n                      {prevValues ? \"Zapisz zmiany\" : \"Złóż zamówienie\"}\n                    </Button>\n                  </Flexbox>\n                </Flexbox>\n              );\n            }}\n          </Form>\n        </Tile>\n      )}\n    </QueryLoader>\n  );\n};\n\nexport default OrderForm;\n\nconst mapProductsToOptions = (products: Product[]) =>\n  products.map((product) => ({\n    value: product._id,\n    name: product.name,\n  }));\n\nconst getAvailableProducts = (products: Product[], values: FormValues) =>\n  products.filter((product) => {\n    const selectedProducts = values._products?.map(({ _id }) => _id) ?? [];\n    return !selectedProducts.includes(product._id);\n  });\n","import createOrder, { FormValues } from \"api/createOrder\";\nimport editOrder from \"api/editOrder\";\nimport { queryClient } from \"index\";\nimport { OrderProduct } from \"api/models/orderProduct\";\nimport { Product } from \"api/models/product\";\nimport { useMutation } from \"react-query\";\nimport getNow from \"utils/getNow\";\nimport { useContext } from \"react\";\nimport { overlayContext, OverlayContext } from \"utils/OverlayProvider\";\n\nexport const useForm = (\n  userId: string,\n  setView: React.Dispatch<React.SetStateAction<View>>,\n  prevValues?: FormValues\n) => {\n  const { setOverlay } = useContext<OverlayContext>(overlayContext);\n  const { mutateAsync: create } = useMutation<unknown, unknown, FormValues>(\n    createOrder,\n    {\n      onMutate: () => {\n        setOverlay(true);\n      },\n      onSuccess: async () => {\n        setView(\"success\");\n        setOverlay(false);\n        await queryClient.refetchQueries([\"userOrders\"]);\n      },\n    }\n  );\n\n  const { mutateAsync: edit } = useMutation<unknown, unknown, FormValues>(\n    editOrder,\n    {\n      onMutate: () => {\n        setOverlay(true);\n      },\n      onSuccess: async () => {\n        setView(\"success\");\n        setOverlay(false);\n        await queryClient.refetchQueries([\"userOrders\"]);\n      },\n    }\n  );\n\n  const onSubmit = (values: FormValues) =>\n    prevValues ? edit(values) : create(values);\n\n  const getInitialValues = (): FormValues => {\n    if (prevValues) return prevValues;\n\n    return {\n      _products: [],\n      notes: \"\",\n      status: \"OPEN\",\n      total: 0,\n      userId,\n      createdOn: getNow(),\n      updatedOn: getNow(),\n    };\n  };\n\n  return {\n    onSubmit,\n    getInitialValues,\n  };\n};\n\nexport const getInitialProduct = (product: Product): OrderProduct => ({\n  price: product.price,\n  quantity: 0,\n  name: product.name,\n  total: 0,\n  _id: product._id,\n});\n\nexport type View = \"form\" | \"success\";\n","import { getFirestore } from \"@firebase/firestore\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { QueryFunctionContext } from \"react-query\";\n\nimport getCollection from \"utils/getCollection\";\nimport orderProduct from \"api/models/orderProduct\";\n\nconst getOrderProducts = async (\n  params: QueryFunctionContext<[string, string], number>\n) => {\n  const orderId = params.queryKey[1];\n\n  const db = getFirestore();\n  const ref = collection(db, \"orders\", orderId, \"products\");\n  const snapshot = await getDocs(ref);\n  const products = getCollection(snapshot, orderProduct);\n\n  return products;\n};\n\nexport default getOrderProducts;\n","import React, { useContext } from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport getOrder from \"api/orders/getOrder\";\nimport OrderForm from \"pages/NewOrder/OrderForm\";\nimport QueryLoader from \"components/QueryLoader\";\nimport getOrderProducts from \"api/orders/getOrderProducts\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\n\nconst Order = () => {\n  const { profile } = useContext<UserContext>(userContext);\n  const userId = profile?._id;\n  if (!userId) throw new Error(\"gfk\");\n\n  const orderId = useRouteMatch<{ id: string }>().params.id;\n  const orderQuery = useQuery([\"order\", orderId], getOrder);\n  const orderProductsQuery = useQuery(\n    [\"orderProducts\", orderId],\n    getOrderProducts\n  );\n\n  return (\n    <QueryLoader query={orderQuery}>\n      {(orderData) => (\n        <QueryLoader query={orderProductsQuery}>\n          {(productsData) => (\n            <OrderForm\n              prevValues={{\n                ...orderData,\n                _products: productsData,\n              }}\n            />\n          )}\n        </QueryLoader>\n      )}\n    </QueryLoader>\n  );\n};\n\nexport default Order;\n","import { number, object, string, TypeOf, enum as zenum } from \"zod\";\n\nconst orderStatus = zenum([\"OPEN\", \"CLOSED\"]);\n\nconst userOrder = object({\n  _id: string().optional(),\n  createdOn: string(),\n  status: orderStatus,\n  total: number(),\n  updatedOn: string(),\n});\n\nexport type UserOrder = TypeOf<typeof userOrder>;\n\nexport default userOrder;\n","import { getFirestore } from \"@firebase/firestore\";\nimport { collection, getDocs, query, orderBy } from \"firebase/firestore\";\nimport { QueryFunctionContext } from \"react-query\";\n\nimport userOrder from \"api/models/userOrder\";\nimport getCollection from \"utils/getCollection\";\n\nconst getUserOrders = async (\n  params: QueryFunctionContext<[string, string], number>\n) => {\n  const userId = params.queryKey[1];\n\n  const db = getFirestore();\n  const ref = collection(db, \"users\", userId, \"orders\");\n  const q = query(ref, orderBy(\"updatedOn\", \"desc\"));\n  const snapshot = await getDocs(q);\n  const orders = getCollection(snapshot, userOrder);\n\n  return orders;\n};\n\nexport default getUserOrders;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nexport type ChipVariant = \"POSITIVE\" | \"NEUTRAL\" | \"NEGATIVE\";\n\ntype Props = {\n  children: ReactNode;\n  variant?: ChipVariant;\n};\n\nconst Chip = ({ children, variant = \"NEUTRAL\" }: Props) => {\n  return <Container variant={variant}>{children}</Container>;\n};\n\ntype ContainerProps = Pick<Props, \"variant\">;\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${(props) => props.theme.radii.small};\n  padding: 5px 10px;\n  color: white;\n  cursor: default;\n  background-color: ${(props) => {\n    if (props.variant === \"POSITIVE\") {\n      return props.theme.colors.green;\n    } else if (props.variant === \"NEGATIVE\") {\n      return props.theme.colors.red;\n    } else {\n      return props.theme.colors.orange;\n    }\n  }};\n`;\n\nexport default Chip;\n","import Box from \"components/Box\";\nimport Flexbox from \"components/Flexbox\";\nimport Tile from \"components/Tile\";\nimport React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst OrdersLoader = () => {\n  return (\n    <Flexbox paddingTop=\"20px\" flexDirection=\"column\">\n      <Flexbox justifyContent=\"flex-end\">\n        <Box width=\"112px\" height=\"18\">\n          <ContentLoader viewBox=\"0 0 112 18\" gradientRatio={2}>\n            <rect width=\"112\" height=\"18\" />\n          </ContentLoader>\n        </Box>\n      </Flexbox>\n\n      <Box width=\"1250px\" height=\"21.6px\" marginTop=\"20px\">\n        <ContentLoader\n          viewBox=\"0 0 1250 21.6\"\n          gradientRatio={2}\n          speed={2}\n          backgroundColor=\"#f3f3f3\"\n          foregroundColor=\"#eaeaea\"\n        >\n          <rect width=\"139\" height=\"21.6\" transform=\"translate(20, 0)\" />\n          <rect width=\"78\" height=\"21.6\" transform=\"translate(305, 0)\" />\n          <rect width=\"131\" height=\"21.6\" transform=\"translate(533, 0)\" />\n          <rect width=\"100\" height=\"21.6\" transform=\"translate(762, 0)\" />\n          <rect width=\"114\" height=\"21.6\" transform=\"translate(1116, 0)\" />\n        </ContentLoader>\n      </Box>\n\n      <Row />\n      <Row />\n    </Flexbox>\n  );\n};\n\nconst Row = () => {\n  return (\n    <Tile\n      padding=\"10px 20px\"\n      width=\"1250px\"\n      height=\"53.6px\"\n      marginTop=\"12px\"\n      justifyContent=\"center\"\n    >\n      <ContentLoader\n        viewBox=\"0 0 1250 22\"\n        gradientRatio={2}\n        speed={2}\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#eaeaea\"\n      >\n        <rect width=\"139\" height=\"22\" transform=\"translate(20, 0)\" />\n        <rect width=\"78\" height=\"22\" transform=\"translate(305, 0)\" />\n        <rect width=\"131\" height=\"22\" transform=\"translate(533, 0)\" />\n        <rect width=\"100\" height=\"22\" transform=\"translate(762, 0)\" />\n        <rect width=\"114\" height=\"22\" transform=\"translate(1116, 0)\" />\n      </ContentLoader>\n    </Tile>\n  );\n};\n\nexport default OrdersLoader;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport getUserOrders from \"api/users/getUserOrders\";\nimport Row from \"components/Row\";\nimport Box from \"components/Box\";\nimport Link from \"components/Link\";\nimport Text from \"components/Text\";\nimport Tile from \"components/Tile\";\nimport Flexbox from \"components/Flexbox\";\nimport Chip, { ChipVariant } from \"components/Chip\";\nimport { Order } from \"api/models/order\";\nimport format from \"date-fns/format\";\nimport parseIso from \"date-fns/parseISO\";\nimport { isToday, isYesterday } from \"date-fns\";\nimport QueryLoader from \"components/QueryLoader\";\nimport OrdersLoader from \"./index.loader\";\nimport { useContext } from \"react\";\nimport { UserContext, userContext } from \"utils/UserProvider\";\n\nconst Orders = () => {\n  const { profile } = useContext<UserContext>(userContext);\n  if (!profile) throw new Error(\"gg\");\n\n  const userOrdersQuery = useQuery([\"userOrders\", profile._id], getUserOrders);\n\n  console.log(process.env);\n\n  return (\n    <QueryLoader Loader={<OrdersLoader />} query={userOrdersQuery}>\n      {(orders) => (\n        <div>\n          <Flexbox justifyContent=\"flex-end\" marginTop=\"20px\">\n            <Link to=\"/newOrder\">Nowe zamówienie</Link>\n          </Flexbox>\n\n          <Box marginTop=\"20px\" padding=\"0 20px\">\n            <Row>\n              <Box gridArea=\"1 / 1 / 1 / 5\">\n                <Text>Numer Zamówienia</Text>\n              </Box>\n\n              <Box gridArea=\"1 / 5 / 1 / 8\">\n                <Text>Utworzono</Text>\n              </Box>\n\n              <Box gridArea=\"1 / 8 / 1 / 11\">\n                <Text>Kwota zamówienia</Text>\n              </Box>\n\n              <Box gridArea=\"1 / 11 / 1 / 14\">\n                <Text>Obecny status</Text>\n              </Box>\n\n              <Flexbox justifyContent=\"flex-end\" gridArea=\"1 / 14 / 1 / 17\">\n                <Text>Ostatnia zmiana</Text>\n              </Flexbox>\n            </Row>\n          </Box>\n\n          {orders.length === 0 ? (\n            <Tile>\n              <Row>\n                <Flexbox justifyContent=\"center\" gridArea=\"1 / 1 / 1 / 17\">\n                  <Text textAlign=\"center\">\n                    Nie masz żadnych zamówień{\" \"}\n                    <Link to=\"/newOrder\">Załóż nowe</Link>\n                  </Text>\n                </Flexbox>\n              </Row>\n            </Tile>\n          ) : (\n            orders.map((order) => (\n              <Tile marginTop={12} paddingY={10}>\n                <Row>\n                  <Flexbox alignItems=\"center\" gridArea=\"1 / 1 / 1 / 5\">\n                    <Link to={`/konto/orders/${order._id}`}>{order._id}</Link>\n                  </Flexbox>\n\n                  <Flexbox alignItems=\"center\" gridArea=\"1 / 5 / 1 / 8\">\n                    <Text>{getCreatedOnValue(order.createdOn)}</Text>\n                  </Flexbox>\n\n                  <Flexbox alignItems=\"center\" gridArea=\"1 / 8 / 1 / 11\">\n                    <Text>{order.total}zł</Text>\n                  </Flexbox>\n\n                  <Flexbox alignItems=\"center\" gridArea=\"1 / 11 / 1 / 14\">\n                    <Chip variant={mapStatusToVariant[order.status]}>\n                      {mapStatusToText[order.status]}\n                    </Chip>\n                  </Flexbox>\n\n                  <Flexbox\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                    gridArea=\"1 / 14 / 1 / 17\"\n                  >\n                    <Text>{getCreatedOnValue(order.updatedOn)}</Text>\n                  </Flexbox>\n                </Row>\n              </Tile>\n            ))\n          )}\n        </div>\n      )}\n    </QueryLoader>\n  );\n};\n\nconst mapStatusToText: Record<Order[\"status\"], string> = {\n  OPEN: \"Otwarte\",\n  CLOSED: \"Zakończone\",\n};\n\nconst mapStatusToVariant: Record<Order[\"status\"], ChipVariant> = {\n  OPEN: \"POSITIVE\",\n  CLOSED: \"NEGATIVE\",\n};\n\nexport const dateFormat = \"dd.MM.yyyy\";\nexport const timeFormat = \"HH:mm\";\nexport default Orders;\n\nconst getCreatedOnValue = (dateString: string) => {\n  const date = parseIso(dateString);\n  const time = format(date, timeFormat);\n\n  if (isToday(date)) {\n    return `Dzisiaj, ${time}`;\n  } else if (isYesterday(date)) {\n    return `Wczoraj, ${time}`;\n  } else {\n    return format(date, dateFormat);\n  }\n};\n","import { ReactNode } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport type TabProps = {\n  to: string;\n  children: ReactNode;\n};\nexport const Tab = ({ to, children }: TabProps) => {\n  const { pathname } = useLocation();\n\n  return (\n    <TabStyled isActive={pathname === to} to={to}>\n      {children}\n    </TabStyled>\n  );\n};\n\ntype TabStyledProps = {\n  isActive?: boolean;\n};\nconst TabStyled = styled(Link)<TabStyledProps>`\n  height: 50px;\n  align-items: center;\n  display: flex;\n  padding: 0 10px;\n  justify-content: center;\n  font-weight: ${(props) => (props.isActive ? \"600\" : \"400\")};\n  text-decoration: none;\n\n  border-bottom: ${(props) =>\n    props.isActive && `2px solid ${props.theme.colors.blue}`};\n\n  color: ${(props) =>\n    props.isActive ? props.theme.colors.blue : props.theme.colors.gray2};\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import styled from \"styled-components/macro\";\n\nconst TabList = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${(props) => props.theme.colors.gray1};\n`;\n\nexport default TabList;\n","import getUser from \"api/users/getUser\";\nimport Box from \"components/Box\";\nimport Flexbox from \"components/Flexbox\";\nimport Image from \"components/Image\";\nimport Link from \"components/Link\";\nimport QueryLoader from \"components/QueryLoader\";\nimport Separator from \"components/Separator\";\nimport Text from \"components/Text\";\nimport Tile from \"components/Tile\";\nimport TileHeader from \"components/TileHeader\";\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\n\nconst UserProfile = () => {\n  const { profile } = useContext<UserContext>(userContext);\n  if (!profile) throw new Error(\"gfk\");\n\n  const userQuery = useQuery([\"user\", profile._id], getUser);\n\n  return (\n    <QueryLoader query={userQuery}>\n      {(data) => {\n        const { address, billing_address, contact } = data;\n\n        return (\n          <Tile>\n            <TileHeader title=\"Klient\">\n              <Link to=\"/konto/settings\">Zobacz szczegóły</Link>\n            </TileHeader>\n\n            <Flexbox flexDirection=\"column\" alignItems=\"center\">\n              <Box width=\"100px\" height=\"100px\">\n                <Image src=\"/\" rounded></Image>\n              </Box>\n\n              <Text marginTop=\"5px\" fontSize=\"18px\" textAlign=\"center\">\n                {address.name}\n              </Text>\n              <Text color=\"blue\" textAlign=\"center\" marginTop=\"5px\">\n                {contact.email}\n              </Text>\n              <Text textAlign=\"center\" marginTop=\"5px\">\n                {contact.phone_number}\n              </Text>\n            </Flexbox>\n\n            <Separator />\n\n            <Text as=\"strong\">Adres do wysyłki</Text>\n\n            <Text>{billing_address.street}</Text>\n            <Text>\n              {billing_address.post_code}, {billing_address.city}\n            </Text>\n            <Text>{billing_address.country}</Text>\n          </Tile>\n        );\n      }}\n    </QueryLoader>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\nimport Settings from \"./Settings\";\nimport Order from \"./Order\";\nimport Orders from \"./Orders\";\nimport { Tab } from \"components/Tabs\";\nimport TabList from \"components/Tabs/TabList\";\nimport PageColumns from \"components/PageColumns\";\nimport UserProfile from \"pages/NewOrder/UserProfile\";\n\nconst UserAccount = () => {\n  return (\n    <>\n      <Header>Konto Użytkownika</Header>\n      <Page>\n        <TabList>\n          <Tab to={`/konto/orders`}>Zamówienia</Tab>\n          <Tab to={`/konto/settings`}>Ustawienia</Tab>\n        </TabList>\n\n        <Switch>\n          <Route path=\"/konto/orders/:id\">\n            <PageColumns>\n              <div>\n                <Order />\n              </div>\n              <div>\n                <UserProfile />\n              </div>\n            </PageColumns>\n          </Route>\n\n          <Route path=\"/konto/orders\">\n            <Orders />\n          </Route>\n\n          <Route path=\"/konto/settings\">\n            <Settings />\n          </Route>\n\n          <Redirect from=\"*\" to=\"/konto/orders\" />\n        </Switch>\n      </Page>\n    </>\n  );\n};\n\nexport default UserAccount;\n","import React from \"react\";\nimport Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\n\nconst NoMatch = () => {\n  return (\n    <>\n      <Header />\n      <Page>NoMatch</Page>\n    </>\n  );\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\nimport OrderForm from \"./OrderForm\";\nimport PageColumns from \"components/PageColumns\";\nimport UserProfile from \"./UserProfile\";\n\nconst NewOrder = () => (\n  <>\n    <Header>Nowe zamówienie</Header>\n    <Page>\n      <PageColumns>\n        <div>\n          <OrderForm />\n        </div>\n        <div>\n          <UserProfile />\n        </div>\n      </PageColumns>\n    </Page>\n  </>\n);\n\nexport default NewOrder;\n","import { initializeApp as initFirebase } from \"firebase/app\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  databaseURL: process.env.REACT_APP_DATEBASE_URL,\n};\n\nexport const initializeApp = () => initFirebase(config);\n","import React, { ReactElement } from \"react\";\nimport { Route as RouterRoute } from \"react-router\";\n\ntype Props = {\n  children: ReactElement;\n  path: string;\n  exact?: boolean;\n};\n\nconst Route = (props: Props) => {\n  return <RouterRoute {...props} />;\n};\n\nexport default Route;\n","import React from \"react\";\nimport Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\n\nconst Logout = () => {\n  return (\n    <>\n      <Header />\n      <Page>Wylogowano</Page>\n    </>\n  );\n};\n\nexport default Logout;\n","import styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  border-radius: ${(props) => props.theme.radii.large};\n  width: 100%;\n  padding-top: 100%;\n  padding-top: calc(100% - 2px);\n  position: relative;\n`;\n\nexport default Thumbnail;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport Text from \"components/Text\";\nimport { Product } from \"api/models/product\";\nimport Thumbnail from \"components/Thumbnail\";\nimport Flexbox from \"components/Flexbox\";\nimport Box from \"components/Box\";\nimport Image from \"components/Image\";\n\ntype Props = Product;\n\nconst ProductTile = (props: Props) => (\n  <Wrapper>\n    <Thumbnail>\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        position=\"absolute\"\n        top=\"0\"\n        bottom=\"0\"\n        left=\"0\"\n        right=\"0\"\n      >\n        <Image border={false} src={props.picture_url} />\n      </Box>\n    </Thumbnail>\n    <Flexbox flexGrow={1} flexDirection=\"column\">\n      <Text as=\"strong\">{props.name}</Text>\n      <Text as=\"p\">{props.description}</Text>\n    </Flexbox>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: min-content 1fr;\n  grid-gap: 20px 0;\n`;\n\nexport default ProductTile;\n","export const breakpoints = {\n  mobile: 0,\n  tablet: 768,\n  desktop: 1360,\n};\n\nexport const radii = {\n  small: \"5px\",\n  medium: \"8px\",\n  large: \"12px\",\n};\n\nconst colors = {\n  blue: \"rgb(69, 123, 225)\",\n  blue1: \"rgb(30, 97, 220)\",\n  blue2: \"rgb(235, 242, 255)\",\n\n  gray1: \"rgb(222, 225, 230)\",\n  gray2: \"rgb(127, 137, 155)\",\n  gray3: \"rgb(228, 238, 230)\",\n  gray4: \"rgb(228, 230, 229)\",\n  gray5: \"rgb(245, 247, 249)\",\n  gray7: \"rgb(227, 228,232)\",\n\n  green: \"rgb(57, 195, 141)\",\n  orange: \"rgb(255, 167, 1)\",\n  purple: \"rgb(140, 57, 195)\",\n  red: \"rgb(243, 46, 78)\",\n\n  white: \"rgb(255, 255, 255)\",\n};\n\nconst theme = {\n  breakpoints,\n  colors,\n  radii,\n};\n\nexport default theme;\n","import { css } from \"styled-components/macro\";\nimport { breakpoints as breakpointsDefinition } from \"./theme\";\n\nexport type BreakpointName = keyof typeof breakpoints;\n\nconst breakpoints =\n  (breakpointList: string) =>\n  (first: any, ...interpolations: any[]) => {\n    const rules = parseBreakpointList(breakpointList)\n      .map(getBreakpointMediaQueryRules)\n      .join();\n    return css`\n      @media ${rules} {\n        ${css(first, ...interpolations)}\n      }\n    `.join(\"\");\n  };\n\nexport default breakpoints;\n\nexport function parseBreakpointList(breakpointList: string) {\n  const breakpointNames = breakpointList.split(\" \").map((str) => str.trim());\n  assertCorrectBreakpointNames(breakpointNames);\n  return breakpointNames;\n}\n\nfunction assertCorrectBreakpointNames(\n  names: string[]\n): asserts names is BreakpointName[] {\n  names.forEach((name) => {\n    if (!(name in breakpointsDefinition))\n      throw new Error(`Invalid breakpoint name: ${name}.`);\n  });\n}\n\nexport function getBreakpointMediaQueryRules(name: BreakpointName) {\n  const [start, end] = getBreakpointRange(name);\n\n  // Relative length units in media queries are based on the initial (browser-provided) value\n  // of font-size on the HTML element. Therefore, the 0.1rem == 1px mapping we use elsewhere\n  // does not work here and we have to divide by 16.\n  // On top of that, Safari has a bug where media queries are based on the _specified_ value of\n  // font-size on the HTML element. Using em instead of rem work around that.\n  let rule = `(min-width: ${start / 16}em)`;\n  if (end) rule += ` and (max-width: ${(end - 1) / 16}em)`;\n  return rule;\n}\n\nconst breakpointValues = Object.values(breakpointsDefinition);\n\nexport function getBreakpointRange(name: BreakpointName) {\n  const value = breakpointsDefinition[name];\n\n  const index = breakpointValues.indexOf(value);\n  const nextValue = breakpointValues[index + 1];\n  return [value, nextValue ?? nextValue - 1];\n}\n","import getProducts from \"api/products/getProducts\";\nimport QueryLoader from \"components/QueryLoader\";\nimport ProductTile from \"pages/Products/ProductTile\";\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components/macro\";\nimport breakpoints from \"styles/breakpoints\";\n\nconst ProductsGrid = () => {\n  const productsQuery = useQuery(\"products\", getProducts);\n\n  return (\n    <QueryLoader query={productsQuery}>\n      {(products) => {\n        return (\n          <Container>\n            {[...products, ...products].map((product) => {\n              return <ProductTile {...product} key={product._id} />;\n            })}\n          </Container>\n        );\n      }}\n    </QueryLoader>\n  );\n};\n\nconst Container = styled.div`\n  grid-template-columns: repeat(5, 1fr);\n  display: grid;\n  min-height: 200px;\n  border: 2px solid blue;\n  grid-gap: 30px;\n\n  ${breakpoints(\"tablet\")`\n    grid-template-columns: repeat(4, 1fr);\n  `}\n\n  ${breakpoints(\"mobile\")`\n    grid-template-columns: repeat(2, 1fr);\n  `}\n`;\n\nexport default ProductsGrid;\n","import Page from \"components/Page\";\nimport Header from \"components/Page/Header\";\nimport React from \"react\";\nimport ProductsGrid from \"./ProductsGrid\";\n\nconst Products = () => {\n  return (\n    <>\n      <Header>Produkty</Header>\n      <Page>\n        <ProductsGrid />\n      </Page>\n    </>\n  );\n};\n\nexport default Products;\n","import React, { useContext, useEffect } from \"react\";\nimport { Redirect, Switch } from \"react-router\";\nimport Login from \"../Login/Login\";\nimport Main from \"../Main\";\nimport Register from \"../Register\";\nimport UserAccount from \"../UserAccount\";\nimport NoMatch from \"../NoMatch\";\nimport NewOrder from \"../NewOrder\";\nimport { initializeApp } from \"firebase/config\";\nimport Route from \"components/Route\";\nimport { userContext, UserContext } from \"utils/UserProvider\";\nimport Logout from \"pages/Logout\";\nimport Products from \"pages/Products\";\n\nconst App = () => {\n  const { profile } = useContext<UserContext>(userContext);\n\n  useEffect(() => {\n    initializeApp();\n  }, []);\n\n  return (\n    <Switch>\n      {profile && (\n        <Route path=\"/newOrder\">\n          <NewOrder />\n        </Route>\n      )}\n\n      <Route path=\"/register\">\n        <Register />\n      </Route>\n\n      <Route path=\"/konto\">\n        {profile ? <UserAccount /> : <Redirect to=\"/login\" />}\n      </Route>\n\n      <Route path=\"/404\">\n        <NoMatch />\n      </Route>\n\n      {!profile && (\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n      )}\n\n      <Route path=\"/products\">\n        <Products />\n      </Route>\n\n      <Route path=\"/login\">\n        {profile ? <Redirect to=\"/konto\" /> : <Login />}\n      </Route>\n\n      <Route exact path=\"/\">\n        <Main />\n      </Route>\n\n      <Redirect from=\"/*\" to=\"/404\" />\n    </Switch>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n\n    * {\n        box-sizing: border-box;\n    }\n\n    body {\n        margin: 0;\n        width: 100vw;\n        max-width: 100%;\n}\n\n    #root {\n        width: 100vw;\n        max-width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        background: rgb(245, 247, 249);\n        position: relative;\n    }\n\n    html {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./pages/App\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport theme from \"./styles/theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport UserProvider from \"utils/UserProvider\";\nimport OverlayProvider from \"utils/OverlayProvider\";\nimport { faCoffee, faTimes, faFan } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nlibrary.add(faCoffee, faTimes, faFan);\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: 90000,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <QueryClientProvider client={queryClient}>\n          <UserProvider>\n            <OverlayProvider>\n              <App />\n            </OverlayProvider>\n          </UserProvider>\n        </QueryClientProvider>\n        <GlobalStyle />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}